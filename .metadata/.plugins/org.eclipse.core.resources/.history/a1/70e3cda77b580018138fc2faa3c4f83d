package hr.fer.zemris.java.gui.calc.elements;

import java.util.function.DoubleUnaryOperator;

import javax.swing.JButton;

import hr.fer.zemris.java.gui.calc.CalcModel;

/**
 * Implements unary operation button which, when pressed, executes unary
 * operation defined.
 * 
 * @author tin
 *
 */
public class CalcUnaryOperationButton extends JButton {
  private boolean isReversed;
  private String buttonText;
  private String reversedButtonText;

  /**
   * Constructor.
   * 
   * @param buttonText button text which is displayed
   * @param reversedButtonText button text which is displayed when reversed
   * @param unaryOperator operation which pressing this button will execute
   * @param reversedUnaryOperator operation which pressing this button will
   *          execute when reversed
   * @param calculator {@link CalcModel} object in which result is stored
   */
  public CalcUnaryOperationButton(String buttonText, String reversedButtonText, DoubleUnaryOperator unaryOperator,
      DoubleUnaryOperator reversedUnaryOperator, CalcModel calculator) {
    super(buttonText);
    isReversed = false;
    this.buttonText = buttonText;
    this.reversedButtonText = reversedButtonText;
    this.addActionListener(a -> {
      if(calculator.getPendingBinaryOperation() != null) {
        calculator.setValue(
            calculator.getPendingBinaryOperation().applyAsDouble(calculator.getActiveOperand(), calculator.getValue()));
      }
      calculator.setValue(isReversed ? reversedUnaryOperator.applyAsDouble(calculator.getValue())
          : unaryOperator.applyAsDouble(calculator.getValue()));
    });
  }

  public void reverse() {
    isReversed = isReversed ? false : true;
    setText(isReversed ? reversedButtonText : buttonText);
  }

}
